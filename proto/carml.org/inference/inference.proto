syntax = "proto3";

import "google/protobuf/any.proto";
import public "github.com/rai-project/dlframework/mxnet/model.proto";
import "github.com/gogo/protobuf/gogoproto/gogo.proto";

option (gogoproto.gostring_all) = true;
option (gogoproto.equal_all) = true;
option (gogoproto.verbose_equal_all) = true;
option (gogoproto.goproto_stringer_all) = false;
option (gogoproto.stringer_all) = true;
option (gogoproto.populate_all) = true;
option (gogoproto.testgen_all) = true;
option (gogoproto.benchgen_all) = true;
option (gogoproto.marshaler_all) = true;
option (gogoproto.sizer_all) = true;
option (gogoproto.unmarshaler_all) = true;

package carml.org.web;

message InferenceRequest {
  string id = 1;
  // todo...
}

message InferenceResponse {
  string id = 1;
  // todo...
  ErrorStatus error = 3;
}

message Null {}

message ErrorStatus {
  string message = 1;
  repeated google.protobuf.Any details = 2;
}

message GetModelInformationRequest { string name = 1; }

service Service {
  rpc Infer(InferenceRequest) returns (stream InferenceResponse) {}
  rpc Models(Null) returns (carml.org.mxnet.ModelInformations) {}
  rpc GetModelInformation(GetModelInformationRequest)
      returns (carml.org.mxnet.ModelInformation) {}
  rpc GetModelGraph(GetModelInformationRequest)
      returns (carml.org.mxnet.Graph) {}
}
